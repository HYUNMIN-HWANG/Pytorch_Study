# BPE Byte Pair Encoding
# 반복적으로 나오는 데이터의 연속된 패턴을 치환하는 방식을 사용해 데이터를 좀 더 효율적으로 저장하는 개념


# Algorithm 1 : Learn BPE operations
import re, collections
def get_stats(vocab):
    paris = collections.defaultdict(int)
    for word, freq in vocab.items():
        symbols = word.split()
        for i in range(len(symbols)-1):
            paris[symbols[i],symbols[i+1]] += freq
    return paris

def merge_vocab(pair, v_in):
    v_out = {}
    bigram = re.escape(' '.join(pair))
    p = re.compile(r'(?<!\\S)' + bigram + r'(?!\\S)')
    for word in v_in :
        w_out = p.sub(''.join(pair), word)
        v_out[w_out] = v_in[word]
    return v_out

S1 = "나는 책상 위에 사과를 먹었다"
S2 = "알고 보니 그 사과는 Jason 것이었다"
S3 = "그래서 Jason에게 사과를 했다"

token_counts = {}
index = 0

for sentence in [S1, S2, S3]:
    tokens = sentence.split()
    for token in tokens :
        if token_counts.get(token) == None :
            token_counts[token] = 1
        else :
            token_counts[token] += 1

token_counts = {" ".join(token) : counts for token, counts in token_counts.items()}
print(token_counts)
# {'나 는': 1, '책 상': 1, '위 에': 1, '사 과 를': 2, '먹 었 다': 1, 
# '알 고': 1, '보 니': 1, '그': 1, '사 과 는': 1, 'J a s o n': 1, '것 이 었 다': 1, 
# '그 래 서': 1, 'J a s o n 에 게': 1, '했 다': 1}

num_merges = 10
for i in range(num_merges):
    print(f'Step {i+1}')
    pairs = get_stats(token_counts)
    print("<pairs> ", pairs)
    best = max(pairs, key=pairs.get)
    print("<best> ", best)
    token_counts = merge_vocab(best, token_counts)
    print("<vocab> ", token_counts)
    print("\n")

"""
Step 1
<pairs>  defaultdict(<class 'int'>, {('나', '는'): 1, ('책', '상'): 1, ('위', '에'): 1, ('사', '과'): 3, ('과', '를'): 2, ('먹', '었'): 1, ('었', '다'): 2, ('알', '고'): 1, ('보', '니'): 1, ('과', '는'): 1, ('J', 'a'): 2, ('a', 's'): 2, ('s', 'o'): 2, ('o', 'n'): 2, ('것', '이'): 1, ('이', '었'): 1, ('그', '래'): 1, ('래', '서'): 1, ('n', '에'): 1, ('에', '게'): 1, ('했', '다'): 1})
<best>  ('사', '과')
<vocab>  {'나 는': 1, '책 상': 1, '위 에': 1, '사과 를': 2, '먹 었 다': 1, '알 고': 1, '보 니': 1, '그': 1, '사과 는': 1, 'J a s o n': 1, '것 이 었 다': 1, '그 래 서': 1, 'J a s o n 에 게': 1, '했 다': 1}


Step 2
<pairs>  defaultdict(<class 'int'>, {('나', '는'): 1, ('책', '상'): 1, ('위', '에'): 1, ('사과', '를'): 2, ('먹', '었'): 1, ('었', '다'): 2, ('알', '고'): 1, ('보', '니'): 1, ('사과', '는'): 1, ('J', 'a'): 2, ('a', 's'): 2, ('s', 'o'): 2, ('o', 'n'): 2, ('것', '이'): 1, ('이', '었'): 1, ('그', '래'): 1, ('래', '서'): 1, ('n', '에'): 1, ('에', '게'): 1, ('했', '다'): 1})
<best>  ('사과', '를')
<vocab>  {'나 는': 1, '책 상': 1, '위 에': 1, '사과를': 2, '먹 었 다': 1, '알 고': 1, '보 니': 1, '그': 1, '사과 는': 1, 'J a s o n': 1, '것 이 었 다': 1, '그 래 서': 1, 'J a s o n 에 게': 1, '했 다': 1}


Step 3
<pairs>  defaultdict(<class 'int'>, {('나', '는'): 1, ('책', '상'): 1, ('위', '에'): 1, ('먹', '었'): 1, ('었', '다'): 2, ('알', '고'): 1, ('보', '니'): 1, ('사과', '는'): 1, ('J', 'a'): 2, ('a', 's'): 2, ('s', 'o'): 2, ('o', 
'n'): 2, ('것', '이'): 1, ('이', '었'): 1, ('그', '래'): 1, ('래', '서'): 1, ('n', '에'): 1, ('에', '게'): 1, ('했', '다'): 1})
<best>  ('었', '다')
<vocab>  {'나 는': 1, '책 상': 1, '위 에': 1, '사과를': 2, '먹 었다': 1, '알 고': 1, '보 니': 1, '그': 1, '사과 는': 1, 'J a s o n': 1, '것 이 었다': 1, '그 래 서': 1, 'J a s o n 에 게': 1, '했 다': 1}


Step 4
<pairs>  defaultdict(<class 'int'>, {('나', '는'): 1, ('책', '상'): 1, ('위', '에'): 1, ('먹', '었다'): 1, ('알', '고'): 1, ('보', '니'): 1, ('사과', '는'): 1, ('J', 'a'): 2, ('a', 's'): 2, ('s', 'o'): 2, ('o', 'n'): 2, ('것', '이'): 1, ('이', '었다'): 1, ('그', '래'): 1, ('래', '서'): 1, ('n', '에'): 1, ('에', '게'): 1, ('했', '다'): 1})
<best>  ('J', 'a')
<vocab>  {'나 는': 1, '책 상': 1, '위 에': 1, '사과를': 2, '먹 었다': 1, '알 고': 1, '보 니': 1, '그': 1, '사과 는': 1, 'Ja s o n': 1, '것 이 었다': 1, '그 래 서': 1, 'Ja s o n 에 게': 1, '했 다': 1}


Step 5
<pairs>  defaultdict(<class 'int'>, {('나', '는'): 1, ('책', '상'): 1, ('위', '에'): 1, ('먹', '었다'): 1, ('알', '고'): 1, ('보', '니'): 1, ('사과', '는'): 1, ('Ja', 's'): 2, ('s', 'o'): 2, ('o', 'n'): 2, ('것', '이'): 1, (' 
이', '었다'): 1, ('그', '래'): 1, ('래', '서'): 1, ('n', '에'): 1, ('에', '게'): 1, ('했', '다'): 1})
<best>  ('Ja', 's')
<vocab>  {'나 는': 1, '책 상': 1, '위 에': 1, '사과를': 2, '먹 었다': 1, '알 고': 1, '보 니': 1, '그': 1, '사과 는': 1, 'Jas o n': 1, '것 이 었다': 1, '그 래 서': 1, 'Jas o n 에 게': 1, '했 다': 1}


Step 6
<pairs>  defaultdict(<class 'int'>, {('나', '는'): 1, ('책', '상'): 1, ('위', '에'): 1, ('먹', '었다'): 1, ('알', '고'): 1, ('보', '니'): 1, ('사과', '는'): 1, ('Jas', 'o'): 2, ('o', 'n'): 2, ('것', '이'): 1, ('이', '었다'): 1, ('그', '래'): 1, ('래', '서'): 1, ('n', '에'): 1, ('에', '게'): 1, ('했', '다'): 1})
<best>  ('Jas', 'o')
<vocab>  {'나 는': 1, '책 상': 1, '위 에': 1, '사과를': 2, '먹 었다': 1, '알 고': 1, '보 니': 1, '그': 1, '사과 는': 1, 'Jaso n': 1, '것 이 었다': 1, '그 래 서': 1, 'Jaso n 에 게': 1, '했 다': 1}


Step 7
<pairs>  defaultdict(<class 'int'>, {('나', '는'): 1, ('책', '상'): 1, ('위', '에'): 1, ('먹', '었다'): 1, ('알', '고'): 1, ('보', '니'): 1, ('사과', '는'): 1, ('Jaso', 'n'): 2, ('것', '이'): 1, ('이', '었다'): 1, ('그', '래'): 1, ('래', '서'): 1, ('n', '에'): 1, ('에', '게'): 1, ('했', '다'): 1})
<best>  ('Jaso', 'n')
<vocab>  {'나 는': 1, '책 상': 1, '위 에': 1, '사과를': 2, '먹 었다': 1, '알 고': 1, '보 니': 1, '그': 1, '사과 는': 1, 'Jason': 1, '것 이 었다': 1, '그 래 서': 1, 'Jason 에 게': 1, '했 다': 1}


Step 8
<pairs>  defaultdict(<class 'int'>, {('나', '는'): 1, ('책', '상'): 1, ('위', '에'): 1, ('먹', '었다'): 1, ('알', '고'): 1, ('보', '니'): 1, ('사과', '는'): 1, ('것', '이'): 1, ('이', '었다'): 1, ('그', '래'): 1, ('래', '서'): 1, ('Jason', '에'): 1, ('에', '게'): 1, ('했', '다'): 1})
<best>  ('나', '는')
<vocab>  {'나는': 1, '책 상': 1, '위 에': 1, '사과를': 2, '먹 었다': 1, '알 고': 1, '보 니': 1, '그': 1, '사과 는': 1, 'Jason': 1, '것 이 었다': 1, '그 래 서': 1, 'Jason 에 게': 1, '했 다': 1}


Step 9
<pairs>  defaultdict(<class 'int'>, {('책', '상'): 1, ('위', '에'): 1, ('먹', '었다'): 1, ('알', '고'): 1, ('보', '니'): 1, ('사과', '는'): 1, ('것', '이'): 1, ('이', '었다'): 1, ('그', '래'): 1, ('래', '서'): 1, ('Jason', '에
'): 1, ('에', '게'): 1, ('했', '다'): 1})
<best>  ('책', '상')
<vocab>  {'나는': 1, '책상': 1, '위 에': 1, '사과를': 2, '먹 었다': 1, '알 고': 1, '보 니': 1, '그': 1, '사과 는': 1, 'Jason': 1, '것 이 었다': 1, '그 래 서': 1, 'Jason 에 게': 1, '했 다': 1}


Step 10
<pairs>  defaultdict(<class 'int'>, {('위', '에'): 1, ('먹', '었다'): 1, ('알', '고'): 1, ('보', '니'): 1, ('사과', '는'): 1, ('것', '이'): 1, ('이', '었다'): 1, ('그', '래'): 1, ('래', '서'): 1, ('Jason', '에'): 1, ('에', '게
'): 1, ('했', '다'): 1})
<best>  ('위', '에')
<vocab>  {'나는': 1, '책상': 1, '위에': 1, '사과를': 2, '먹 었다': 1, '알 고': 1, '보 니': 1, '그': 1, '사과 는': 1, 'Jason': 1, '것 이 었다': 1, '그 래 서': 1, 'Jason 에 게': 1, '했 다': 1}
"""

# 특징
# 마지막 스텝이 무조건 완벽한 답변이라 보기는 어렵다.
# 더 큰 Corpus에서 적절한 Iteration을 지정해 만들면 위 결과보다 더 적합한 Vocabulary를 만들 수 있다.
